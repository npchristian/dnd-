#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <stdbool.h>
#include <time.h>

#define SIZE 50

/*********** DATA STRUCTURE ***********/
typedef struct{
    char name[SIZE];
    
    int level;
    int charisma;
    int class;
    int dexterity;
    int intelligence;
    int strength;
    int wisdom;
    
    double weight;
    double max_Carry;
    
    bool feats;
} Character;

/*********** FUNCTION HEADERS***********/
Character create_Character(); //generic call to create a character
Character get_Stats(Character new_Char); //gets the 5 stats for the character

int dice_roll(int sides); //roles an n sided dice
int four_d_6_drop_lowest(); //sorts four dice rolls, drops lowest, and sums remaining 3
int get_class(); //returns the class chosen by user
int get_int(); //returns an integer entered by user
int get_race(); //returns the race chosen by user

void get_String(char new_string[], char string_type[]); //returns a string entered by user
void print_stats(Character new_char);

/*********** MAIN***********/
int main(){
    char name[SIZE]; //stores character name
    Character myCharacter; //create a character
    puts("Welcome to the Dungeons and Dragons fifth edition character creation module."); //welcome message
    myCharacter = create_Character(); //character creation call
    return 0;
}

/*********** FUNCTION DEFINITIONS***********/
Character create_Character(){
    
    /*********** VARIABLE DECLARATIONS***********/
    int choice; // choice used to store user decision
    Character new_Character; //returned
    
    /*********** GET NAME ***********/
    puts("Please enter your character's name: ");
    get_String(new_Character.name, "character's name");

    /*********** GET LEVEL, CLASS, & RACE*********/
    printf("What level will %s be (1-20)? ", new_Character.name);
    new_Character.level = get_int(1, 20);
    new_character.class = get_class();
    new_character.race = get_race();
    
    /*********** GET STATS ***********/
    new_Character = get_Stats(new_Character);
    
    return new_Character;
}
Character get_Stats(Character new_Char){
    
    /*********** VARIABLE DECLARATIONS***********/
    int stats[5] //stores user stats
    int choice, choice2 = 2, choice3; // stores user decisions
    int count; //used in for loops
    
        /*********** GET THE 5 STATS***********/
    while(choice2 ==2){
        puts("We will begin by rolling your stats as if you were level 1. Stat modifiers due");
        puts("to level, race, and other factors will be added later. You may roll your dice");
        puts("(4d6 drop lowest) or the module can roll it for you.");
        puts("How would you like to compute your stats?");
        printf("1.\tI will roll and manually enter my stats.\n2.\tRoll my dice for me.\n");
        choice1 = get_int(1,2); //Explain program and ask for input
        
        while (choice2 == 2 && choice == 1){
            puts("Enter your charisma:");
            new_Char.charisma = get_int(3,18);
            puts("Enter your dexterity:");
            new_Char.dexterity = get_int(3,18);
            puts("Enter your intelligence:");
            new_Char.intelligence = get_int(3,18);
            puts("Enter your strenth:");
            new_Char.strength = get_int(3,18);
            puts("Enter your wisdom:");
            new_Char.wisdom = get_int(3,18);
            choice2=check_stats(new_char);
        } //get the 5 stats
        
        srand(time(NULL));
        if (choice1==2){
 
            for(count =0; count<5; count++){
                stats[count] = four_d_6_drop_lowest();
            } //if user wishes, roll dice for user
            
            while (choice2==2){
                new_char.charisma=new_char.dexterity=new_char.intelligence=new_char.strenth=new_char.wisdom = count = 0; //initialize to zero
                puts("We will assign your stats from highest to lowest:");
              
                while(count<5){
                    printf("Where will you assign your %d roll?\n", stats[count]);
                    printf("1.\tCharisma\n2.\tDexterity\n3.\tIntelligence4.\tStrength\n5.\tWisdom");
                    choice3=get_int(1-5);
                    
                    switch(count3){
                        case 1:
                            if (new_char.charisma == 0)
                                {
                                    new_char.charisma = stats[count];
                                    count++;
                                }
                            else
                                printf("Error: charisma already given value: %d.\n", new_char.charisma);
                            break;
                        case 2:
                            if (new_char.dexterity == 0)
                                {
                                    new_char.dexterity = stats[count];
                                    count++;
                                }
                            else
                                printf("Error: dexterity already given value: %d.\n", new_char.dexterity);
                        break;
                        case 3:
                            if (new_char.intelligence == 0)
                                {
                                    new_char.intelligence = stats[count];
                                    count++;
                                }
                            else
                                printf("Error: intelligence already given value: %d.\n", new_char.intelligence);
                        break;
                        case 4:
                            if (new_char.strength == 0)
                                {
                                    new_char.strength = stats[count];
                                    count++;
                                }
                            else
                                printf("Error: strength already given value: %d.\n", new_char.strength);
                        break;
                        case 5:
                            if (new_char.wisdom == 0)
                                {
                                    new_char.wisdom = stats[count];
                                    count++;
                                }
                            else
                                printf("Error: wisdom already given value: %d.\n", new_char.wisdom);
                        break;
                    }
                }
                choice2=check_stats(new_char);
            }
        }
    }
    return new_char;
}
int check_stats(Character new_character){
        printf("%s's stats are:\n", new_Character.name);
        printf("Charisma:\t%d\n", new_Character.charisma);
        printf("Dexterity:\t%d\n", new_Character.dexterity);
        printf("Intelligence:\t%d\n", new_Character.intelligence);
        printf("Strength:\t%d\n", new_Character.strength);
        printf("Is this correct?\n1.\tYes.\n2.\tNo.\n");
        return (get_int(1,2)); 
}
int dice_roll(int sides){
    return (1 + rand()% (sides+1-1));
}
int get_class(){
    /*********** GET CLASS ***********/
        puts("What class will you play?");
        printf("1.\tBarbarian\n2.\tBard\n3.\tCleric\n4.\tDruid\n5.\tFighter\n");
        printf("6.\tMonk\n7.\tPaladin\n8.\tRanger\n9.\tSorcerer\n10.\tWarlock\n11.\tWizard\n");
        return (get_int(1,11));
}
int get_int(int lower, int upper){
    int choice;
    char junk;
    bool flag = true;
    
    while(flag){
        if(scanf("%d", &choice)){
            if (choice > upper || choice < lower)
            {
                printf("Error: restrict input to %d - %d.\n", lower, upper);
                printf("Try again: ");
            }
            else
            {
                printf("\n");
                flag = false;
            }
        }
        else
        {
            scanf("%c", &junk); //consumes the char mistakenly entered
            printf("Error: restrict input to an integer (1, 2, 3, etc.)\n");
        }
    }
    return choice;
}
int get_race(){
    /*********** GET RACE ***********/
        puts("What race will you play?");
        printf("1.\tAarakocra\n2.\tAasimar\n3\tBugbear\n.4.\tDragonborn\n");
        printf("5.\tDwarf\n6.\tElf\n7.\tFeral Tiefling\n8\tFirbolg\n");
        printf("9.\tGenasi\n10.\tGnome\n11.\tGoblin\n12.\tGoliath\n");
        printf("13.\tHobgoblin\n14.\tHalf-Elf\n15.\tHalfling\n16.\tHalf-Orc\n17.\tHuman\n18.\tKenku\n.19.\tKobold\n");
        printf("20.\tLizardfolk\n21.\tOrc\n22.\tTabaxi\n23.\tTiefling\n24.\tTriton\n25.\tYuan-ti Pureblood");
        return (get_int(1,26));
}

void four_d_6_drop_lowest(int stat_block[4]){
    int count, temp, dice[4];
    
    for (count = 0; count<4; count++){
        dice[count]=dice_roll(6);
        if(count!=0 && dice[count] >= dice[count-1])
        {
            temp=dice[count-1];
            dice[count-1] = dice[count];
            dice[count]=temp;
        }
    }
    printf("You rolled: ");
    for (count =0; count<4; count++)
        printf("%d ", dice[count]);
    printf("After dropping %d, the total is: %d.\n", dice[3], dice[0]+dice[1]+dice[2]);
}
void get_String(char new_string[], char string_type[]){
    int n, choice;
    char junk;
    do{
        fgets(new_string, SIZE, stdin);
        for (n=0; n<50 && new_string[n] != "\0";n++)
            if (new_string[n] == '\n')
                new_string[n] = '\0';// eliminates the newline character

        printf("You selected %s.", new_string);
        printf("\nUse this for your %s?\n1.\tyes\n2.\tno\n", string_type);
        choice = get_int(1,2);
        scanf("%c", &junk); //consumes newline
        if (choice ==2)
            printf("Enter your %s again: \n", string_type);

    }while (choice != 1);
}
